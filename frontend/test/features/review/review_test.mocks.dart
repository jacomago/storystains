// Mocks generated by Mockito 5.2.0 from annotations
// in storystains/test/features/review/review_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:storystains/features/review/review_model.dart' as _i2;
import 'package:storystains/features/review/review_service.dart' as _i3;
import 'package:storystains/features/story/story.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeReviewResp_0 extends _i1.Fake implements _i2.ReviewResp {}

/// A class which mocks [ReviewService].
///
/// See the documentation for Mockito's code generation for more information.
class MockReviewService extends _i1.Mock implements _i3.ReviewService {
  MockReviewService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ReviewResp> create(_i5.Story? story, String? body) =>
      (super.noSuchMethod(Invocation.method(#create, [story, body]),
              returnValue: Future<_i2.ReviewResp>.value(_FakeReviewResp_0()))
          as _i4.Future<_i2.ReviewResp>);
  @override
  _i4.Future<_i2.ReviewResp> update(
          String? username, String? slug, _i5.Story? story, String? body) =>
      (super.noSuchMethod(
              Invocation.method(#update, [username, slug, story, body]),
              returnValue: Future<_i2.ReviewResp>.value(_FakeReviewResp_0()))
          as _i4.Future<_i2.ReviewResp>);
  @override
  _i4.Future<_i2.ReviewResp> read(String? username, String? slug) =>
      (super.noSuchMethod(Invocation.method(#read, [username, slug]),
              returnValue: Future<_i2.ReviewResp>.value(_FakeReviewResp_0()))
          as _i4.Future<_i2.ReviewResp>);
  @override
  _i4.Future<void> delete(String? username, String? slug) =>
      (super.noSuchMethod(Invocation.method(#delete, [username, slug]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
