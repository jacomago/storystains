// Mocks generated by Mockito 5.2.0 from annotations
// in storystains/test/pages/login_register_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;
import 'dart:ui' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:storystains/features/auth/auth.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [AuthState].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthState extends _i1.Mock implements _i2.AuthState {
  MockAuthState() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthStatus get status => (super.noSuchMethod(Invocation.getter(#status),
      returnValue: _i2.AuthStatus.initial) as _i2.AuthStatus);
  @override
  String get error =>
      (super.noSuchMethod(Invocation.getter(#error), returnValue: '')
          as String);
  @override
  bool get isLogin =>
      (super.noSuchMethod(Invocation.getter(#isLogin), returnValue: false)
          as bool);
  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);
  @override
  bool get isAuthenticated => (super
          .noSuchMethod(Invocation.getter(#isAuthenticated), returnValue: false)
      as bool);
  @override
  bool get notAuthenticated =>
      (super.noSuchMethod(Invocation.getter(#notAuthenticated),
          returnValue: false) as bool);
  @override
  bool get isFailed =>
      (super.noSuchMethod(Invocation.getter(#isFailed), returnValue: false)
          as bool);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  void switchLoginRegister() =>
      super.noSuchMethod(Invocation.method(#switchLoginRegister, []),
          returnValueForMissingStub: null);
  @override
  _i3.Future<dynamic> init() =>
      (super.noSuchMethod(Invocation.method(#init, []),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> loginRegister(String? username, String? password) =>
      (super.noSuchMethod(
          Invocation.method(#loginRegister, [username, password]),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  void addListener(_i4.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i4.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
