name: Backend

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: ./backend
jobs:

  cargo-fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check

  doc:
    name: Rustdoc
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rust-docs
      - uses: Swatinem/rust-cache@v2
      - env:
          RUSTDOCFLAGS: "-D missing_docs -D rustdoc::missing_doc_code_examples"
        run: cargo doc --workspace --all-features --no-deps --document-private-items

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy -- -D warnings

  cargo-test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
      redis:
        image: redis:6
        ports:
          - 6379:6379
    env:
      SQLX_VERSION: 0.6.0
      SQLX_FEATURES: postgres,native-tls
      RUST_BACKTRACE: 1
      RUST_LOG: info
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@v2
        with:
          tool: sqlx-cli
      - uses: taiki-e/install-action@nextest
      - name: Migrate database
        working-directory: ./backend
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh
      - name: Build and archive tests
        run: cargo nextest archive --archive-file nextest-archive.tar.zst
      - name: Upload archive to workflow
        uses: actions/upload-artifact@v3
        with:
          name: nextest-archive
          path: nextest-archive.tar.zst
  

  tarpaulin-coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
      redis:
        image: redis:6
        ports:
          - 6379:6379
    env:
      SQLX_VERSION: 0.6.0
      SQLX_FEATURES: postgres,native-tls
      RUST_BACKTRACE: 1
      RUST_LOG: info
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@v2
        with:
          tool: sqlx-cli

      - name: Migrate database
        working-directory: ./backend
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh
      - uses: taiki-e/install-action@cargo-tarpaulin
      - name: run coverage
        run: cargo tarpaulin --ignore-tests --avoid-cfg-tarpaulin

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          flags: backend
          token: ${{secrets.CODECOV_TOKEN}}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml